"""updated events table

Revision ID: 459a25099614
Revises: 4baeeb73f8c9
Create Date: 2024-07-04 15:23:56.434697

"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "459a25099614"
down_revision = "4baeeb73f8c9"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "events",
        sa.Column("surge_price", sa.Float(), nullable=True),
    )
    op.add_column(
        "events",
        sa.Column("surge_threshold", sa.Float(), nullable=True),
    )
    meta = sa.MetaData()
    bind = op.get_bind()

    # """ pass in tuple with tables we want to reflect,
    # otherwise whole database will get reflected"""
    meta.reflect(
        bind=bind,
        only=("events",),
    )
    event = sa.Table("events", meta)
    stmt = (
        event.update()
        .where(event.c.surge_price.is_(None), event.c.surge_threshold.is_(None))
        .values(
            surge_price=0,
            surge_threshold=0,
        )
    )
    print("event is_dependent_event query to execute ->", stmt)
    op.get_bind().execute(stmt)

    op.alter_column("events", "surge_price", nullable=False)
    op.alter_column("events", "surge_threshold", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("events", "surge_threshold")
    op.drop_column("events", "surge_price")
    # ### end Alembic commands ###
